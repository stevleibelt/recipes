#!/bin/bash
####
#work in progress script
####

####
#idea:
#
#replaces the create recipe script (or use them)
####

#begin of local variables
declare -i LOCAL_AT_LEAST_ONE_TEMPLATE_WAS_SELECTED=0
declare -i LOCAL_IS_DRY_RUN=0
declare -i LOCAL_DISPLAY_HELP=0
declare -a LOCAL_LIST_OF_CATEGORIES=("breakfast" "snack" "lunch" "dinner" "drink")  #@todo move into .data/file
declare -r LOCAL_PATH_OF_THE_CURRENT_SCRIPT=$(cd $(dirname "${BASH_SOURCE[0]}"); pwd)
declare -r LOCAL_PATH_OF_THE_RECIPES=${LOCAL_PATH_OF_THE_CURRENT_SCRIPT}/..
declare -r LOCAL_PATH_OF_THE_ENGLISH_TEMPLATE=${LOCAL_PATH_OF_THE_CURRENT_SCRIPT}/../.data/english_template.md
declare -r LOCAL_PATH_OF_THE_GERMAN_TEMPLATE=${LOCAL_PATH_OF_THE_CURRENT_SCRIPT}/../.data/german_template.md
declare -r LOCAL_PATH_OF_THE_INDEX_FILE=${LOCAL_PATH_OF_THE_CURRENT_SCRIPT}/../.data/index
declare -i LOCAL_INDEX_OF_THE_NEXT_RECIPE=$(cat ${LOCAL_PATH_OF_THE_INDEX_FILE} | tr -cd [:digit:])
#end of local variables

#begin of functions
function execute_or_output ()
{
    if [[ ${LOCAL_IS_DRY_RUN} -eq 1 ]];
    then
        echo "$1"
    else
        $1
    fi
}
#end of functions

#begin of getops
while getopts "dh" LOCAL_CURRENT_OPTION;
do
    case ${LOCAL_CURRENT_OPTION} in
        d )
            LOCAL_IS_DRY_RUN=1
            ;;
        h )
            echo "Usage: $(basename $0) [OPTION]"
            echo "The main command to create a new recipe."
            echo ""
            echo "Optional arguments."
            echo "  -d      enable dry run - nothing will happen"
            echo "  -h      print this help"
            echo ""
            ;;
    esac
done
#end of getops

#begin of user input
read -p ":: Will this recipe include an english translation? [y/n] (no is default): " LOCAL_ENGLISH_TEMPLATE_SELECTED

read -p ":: Will this recipe include a german translation? [y/n] (yes is default): " LOCAL_GERMAN_TEMPLATE_SELECTED

if [[ ${LOCAL_GERMAN_TEMPLATE_SELECTED} != "n" ]];
then
    LOCAL_GERMAN_TEMPLATE_SELECTED="y"
fi

if [[ ${LOCAL_ENGLISH_TEMPLATE_SELECTED} == "y" ]];
then
    LOCAL_AT_LEAST_ONE_TEMPLATE_WAS_SELECTED=1
fi

if [[ ${LOCAL_GERMAN_TEMPLATE_SELECTED} == "y" ]];
then
    LOCAL_AT_LEAST_ONE_TEMPLATE_WAS_SELECTED=1
fi

if [[ ${LOCAL_AT_LEAST_ONE_TEMPLATE_WAS_SELECTED} -eq 0 ]];
then
    echo "::"
    echo ":: Failed!"
    echo ":: You have to include at least one translation"
    exit 1
fi

echo ":: Available categories are"
LOCAL_CATEGORY_LIST_AS_STRING=""

for LOCAL_CATEGORY_KEY in ${!LOCAL_LIST_OF_CATEGORIES[@]};
do
    LOCAL_CATEGORY_LIST_AS_STRING+="${LOCAL_CATEGORY_KEY}) ${LOCAL_LIST_OF_CATEGORIES[${LOCAL_CATEGORY_KEY}]}  "
done

while true; do
    echo "   ${LOCAL_CATEGORY_LIST_AS_STRING}"
    read -p ":: Please select the fitting category number. " LOCAL_CATEGORY_KEY_SELECTED

    if [[ -z ${LOCAL_CATEGORY_KEY_SELECTED} ]];
    then
        echo "::"
        echo ":: Failed!"
        echo ":: Please input a valid category number."
    elif [[ ! -z ${LOCAL_LIST_OF_CATEGORIES[${LOCAL_CATEGORY_KEY_SELECTED}]} ]];
    then
        LOCAL_CATEGORY_NAME="${LOCAL_LIST_OF_CATEGORIES[${LOCAL_CATEGORY_KEY_SELECTED}]}"
        break;
    else
        echo "::"
        echo ":: Failed!"
        echo ":: Please input a valid category number."
    fi
done
#end of user input

#begin of creating the file
LOCAL_PATH_OF_SELECTED_RECIPE_CATEGORY="${LOCAL_PATH_OF_THE_RECIPES}/${LOCAL_CATEGORY_NAME}"
LOCAL_PATH_OF_NEXT_RECIPE="${LOCAL_PATH_OF_SELECTED_RECIPE_CATEGORY}/${LOCAL_INDEX_OF_THE_NEXT_RECIPE}.md"

if [[ ! -d "${LOCAL_PATH_OF_SELECTED_RECIPE_CATEGORY}" ]];
then
    execute_or_output "mkdir -p \"${LOCAL_PATH_OF_SELECTED_RECIPE_CATEGORY}\""
fi

execute_or_output "/usr/bin/env touch \"${LOCAL_PATH_OF_NEXT_RECIPE}\""

if [[ ${LOCAL_ENGLISH_TEMPLATE_SELECTED} == "y" ]];
then
    execute_or_output "/usr/bin/env cat \"${LOCAL_PATH_OF_THE_ENGLISH_TEMPLATE}\" >> \"${LOCAL_PATH_OF_NEXT_RECIPE}\""
    #@todo implement a smarter way
    execute_or_output "/usr/bin/env echo \"\" >> \"${LOCAL_PATH_OF_NEXT_RECIPE}\""
fi

if [[ ${LOCAL_GERMAN_TEMPLATE_SELECTED} == "y" ]];
then
    execute_or_output "/usr/bin/env cat \"${LOCAL_PATH_OF_THE_GERMAN_TEMPLATE}\" >> \"${LOCAL_PATH_OF_NEXT_RECIPE}\""
fi

((LOCAL_INDEX_OF_THE_NEXT_RECIPE++))
execute_or_output "echo \"next: ${LOCAL_INDEX_OF_THE_NEXT_RECIPE}\" > \"${LOCAL_PATH_OF_THE_INDEX_FILE}\""

/usr/bin/env vim "${LOCAL_PATH_OF_NEXT_RECIPE}"
#begin of creating the file

####
#workflow:
#
#>will this recipe include an english translation?
#   if yes -> include english template
#will this recipe include a german translation?
#   if yes -> include german template
#<abort if neither german nor english is choosen>
#<list available categories>
#>please choose the fitting category
#<create a file for the fitting category>
#<open the file to edit and write>
#@todo
#<update readme>
#<update tag list>
#put all in functions
####
